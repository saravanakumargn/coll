<?php

namespace DataAdminBundle\Entity;

//php bin/console doctrine:generate:entities DataAdminBundle/Entity/Directory

use Doctrine\ORM\Mapping as ORM;
use APY\DataGridBundle\Grid\Mapping as GRID;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * 
 * DataAdminBundle\Entity\Directory
 * 
 * @ORM\Entity
 * @ORM\Table(name="directory")
 * @ORM\HasLifecycleCallbacks 
 * @GRID\Source(columns="id, headingNameEn, headingNameTa, isActive") 
 */
class Directory {

    /**
     * @ORM\Column(type="guid")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="UUID")
     */
    private $id;
    
    /**
     * @var text $categoryId
     *
     * @ORM\ManyToOne(targetEntity="Category", inversedBy="list_items")
     * @ORM\JoinColumn(name="category_id", referencedColumnName="id")
     * @GRID\Column(field="categoryId.categoryUrl", visible="true", title="Category", size="100")
     */
    private $categoryId;

    /**
     * @var string $directorySchema
     *
     * @ORM\Column(name="directory_schema", type="text", nullable=true)
     */
    private $directorySchema;
    
    /**
     * @var string $headingName
     *
     * @ORM\Column(name="heading_name_en", type="string", length=100, nullable=false)
     */
    private $headingNameEn;

    /**
     * @var string $address
     *
     * @ORM\Column(name="address_en", type="text", nullable=true)
     */
    private $addressEn;

    /**
     * @ORM\Column(name="description_en", type="text", nullable=true)
     */
    protected $descriptionEn;

    
    /**
     * @var string $headingName
     *
     * @ORM\Column(name="heading_name_ta", type="string", length=100, nullable=false)
     */
    private $headingNameTa;

    /**
     * @var string $address
     *
     * @ORM\Column(name="address_ta", type="text", nullable=true)
     */
    private $addressTa;

    /**
     * @ORM\Column(name="description_ta", type="text", nullable=true)
     */
    protected $descriptionTa;
    
    /**
     * @ORM\Column(type="datetime")
     */
    protected $modifiedon;
    
    /**
     * @ORM\Column(type="datetime")
     */
    private $createdon;
    
    /**
     * @var text $isActive
     *
     * @ORM\Column(name="is_active", type="boolean", options={"default"=true})
     */
    private $isActive;
    
    /**
     * @var string $lat
     *
     * @ORM\Column(name="lat", type="decimal", scale=6, nullable=true)
     */
    private $lat;

    /**
     * @var string $lng
     *
     * @ORM\Column(name="lng", type="decimal", scale=6, nullable=true)
     */
    private $lng;       

    /**
     * @var string $pageUrl
     *
     * @ORM\Column(name="page_url", type="string", length=100, nullable=true, unique=true)
     */
    private $pageUrl;

    /**
     * @var string $marketplaceSchema
     *
     * @ORM\Column(name="marketplace_schema", type="text", nullable=true)
     */
    private $marketplaceSchema;
    
    /**
     * @var string $primaryContact
     * @ORM\Column(name="primary_contact", type="string", length=50, nullable=true)
     */
    private $primaryContact;

    /**
     * @Assert\Url(
     *    message = "The url '{{ value }}' is not a valid url",
     * )
     * 
     * @var string $imageUrl
     *
     * @ORM\Column(name="image", type="string", length=255, nullable=true)
     */
    private $imageUrl;

    /**
     * @var string $galleryUrl
     *
     * @ORM\Column(name="gallery_url", type="text", nullable=true)
     */
    private $galleryUrl;
    
    /**
     * @var string $pageEn
     *
     * @ORM\Column(name="page_en", type="text", nullable=true)
     */
    private $pageEn;

    /**
     * @var string $pageTa
     *
     * @ORM\Column(name="page_ta", type="text", nullable=true)
     */
    private $pageTa;
    
    /**
     * @var text $isPageActive
     *
     * @ORM\Column(name="is_page_active", type="boolean",  nullable=false, options={"default"=false})
     */
    private $isPageActive;

    /**
     * @var text $viewCount
     *
     * @ORM\Column(name="view_count", type="integer", length=5,  nullable=true, options={"default"=0})
     */
    private $viewCount;
    
    public function __construct() {
        $this->setCreatedon(new \DateTime());
        if ($this->getModifiedon() == null) {
            $this->setModifiedon(new \DateTime());
        }
    }
    
    private function seoUrl($str) {
        if ($str !== mb_convert_encoding(mb_convert_encoding($str, 'UTF-32', 'UTF-8'), 'UTF-8', 'UTF-32'))
            $str = mb_convert_encoding($str, 'UTF-8', mb_detect_encoding($str));
        $str = htmlentities($str, ENT_NOQUOTES, 'UTF-8');
        $str = preg_replace('`&([a-z]{1,2})(acute|uml|circ|grave|ring|cedil|slash|tilde|caron|lig);`i', '\1', $str);
        $str = html_entity_decode($str, ENT_NOQUOTES, 'UTF-8');
        $str = preg_replace(array('`[^a-z0-9]`i', '`[-]+`'), '-', $str);
        $str = strtolower(trim($str, '-'));
        return $str;
    }
    
    /**
     * @ORM\PrePersist()
     * @ORM\PreUpdate()
     */
    public function updateModifiedDatetime() {
        // update the modified time
        $this->setModifiedon(new \DateTime());
    }


    /**
     * Get id
     *
     * @return guid
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set headingNameEn
     *
     * @param string $headingNameEn
     *
     * @return Directory
     */
    public function setHeadingNameEn($headingNameEn)
    {
        $this->headingNameEn = $headingNameEn;

        return $this;
    }

    /**
     * Get headingNameEn
     *
     * @return string
     */
    public function getHeadingNameEn()
    {
        return $this->headingNameEn;
    }

    /**
     * Set addressEn
     *
     * @param string $addressEn
     *
     * @return Directory
     */
    public function setAddressEn($addressEn)
    {
        $this->addressEn = $addressEn;

        return $this;
    }

    /**
     * Get addressEn
     *
     * @return string
     */
    public function getAddressEn()
    {
        return $this->addressEn;
    }

    /**
     * Set descriptionEn
     *
     * @param string $descriptionEn
     *
     * @return Directory
     */
    public function setDescriptionEn($descriptionEn)
    {
        $this->descriptionEn = $descriptionEn;

        return $this;
    }

    /**
     * Get descriptionEn
     *
     * @return string
     */
    public function getDescriptionEn()
    {
        return $this->descriptionEn;
    }

    /**
     * Set headingNameTa
     *
     * @param string $headingNameTa
     *
     * @return Directory
     */
    public function setHeadingNameTa($headingNameTa)
    {
        $this->headingNameTa = $headingNameTa;

        return $this;
    }

    /**
     * Get headingNameTa
     *
     * @return string
     */
    public function getHeadingNameTa()
    {
        return $this->headingNameTa;
    }

    /**
     * Set addressTa
     *
     * @param string $addressTa
     *
     * @return Directory
     */
    public function setAddressTa($addressTa)
    {
        $this->addressTa = $addressTa;

        return $this;
    }

    /**
     * Get addressTa
     *
     * @return string
     */
    public function getAddressTa()
    {
        return $this->addressTa;
    }

    /**
     * Set descriptionTa
     *
     * @param string $descriptionTa
     *
     * @return Directory
     */
    public function setDescriptionTa($descriptionTa)
    {
        $this->descriptionTa = $descriptionTa;

        return $this;
    }

    /**
     * Get descriptionTa
     *
     * @return string
     */
    public function getDescriptionTa()
    {
        return $this->descriptionTa;
    }

    /**
     * Set modifiedon
     *
     * @param \DateTime $modifiedon
     *
     * @return Directory
     */
    public function setModifiedon($modifiedon)
    {
        $this->modifiedon = $modifiedon;

        return $this;
    }

    /**
     * Get modifiedon
     *
     * @return \DateTime
     */
    public function getModifiedon()
    {
        return $this->modifiedon;
    }

    /**
     * Set createdon
     *
     * @param \DateTime $createdon
     *
     * @return Directory
     */
    public function setCreatedon($createdon)
    {
        $this->createdon = $createdon;

        return $this;
    }

    /**
     * Get createdon
     *
     * @return \DateTime
     */
    public function getCreatedon()
    {
        return $this->createdon;
    }

    /**
     * Set isActive
     *
     * @param boolean $isActive
     *
     * @return Directory
     */
    public function setIsActive($isActive)
    {
        $this->isActive = $isActive;

        return $this;
    }

    /**
     * Get isActive
     *
     * @return boolean
     */
    public function getIsActive()
    {
        return $this->isActive;
    }

    /**
     * Set categoryId
     *
     * @param \DataAdminBundle\Entity\Category $categoryId
     *
     * @return Directory
     */
    public function setCategoryId(\DataAdminBundle\Entity\Category $categoryId = null)
    {
        $this->categoryId = $categoryId;

        return $this;
    }

    /**
     * Get categoryId
     *
     * @return \DataAdminBundle\Entity\Category
     */
    public function getCategoryId()
    {
        return $this->categoryId;
    }

    /**
     * Set lat
     *
     * @param string $lat
     *
     * @return Directory
     */
    public function setLat($lat)
    {
        $this->lat = $lat;

        return $this;
    }

    /**
     * Get lat
     *
     * @return string
     */
    public function getLat()
    {
        return $this->lat;
    }

    /**
     * Set lng
     *
     * @param string $lng
     *
     * @return Directory
     */
    public function setLng($lng)
    {
        $this->lng = $lng;

        return $this;
    }

    /**
     * Get lng
     *
     * @return string
     */
    public function getLng()
    {
        return $this->lng;
    }

    /**
     * Set pageUrl
     *
     * @param string $pageUrl
     *
     * @return Directory
     */
    public function setPageUrl($pageUrl)
    {
//        $this->pageUrl = $pageUrl;
        $this->pageUrl = $this->seoUrl($pageUrl);

        return $this;
    }

    /**
     * Get pageUrl
     *
     * @return string
     */
    public function getPageUrl()
    {
        return $this->pageUrl;
    }

    /**
     * Set primaryContact
     *
     * @param string $primaryContact
     *
     * @return Directory
     */
    public function setPrimaryContact($primaryContact)
    {
        $this->primaryContact = $primaryContact;

        return $this;
    }

    /**
     * Get primaryContact
     *
     * @return string
     */
    public function getPrimaryContact()
    {
        return $this->primaryContact;
    }

    /**
     * Set imageUrl
     *
     * @param string $imageUrl
     *
     * @return Directory
     */
    public function setImageUrl($imageUrl)
    {
        $this->imageUrl = $imageUrl;

        return $this;
    }

    /**
     * Get imageUrl
     *
     * @return string
     */
    public function getImageUrl()
    {
        return $this->imageUrl;
    }

    /**
     * Set galleryUrl
     *
     * @param string $galleryUrl
     *
     * @return Directory
     */
    public function setGalleryUrl($galleryUrl)
    {
        $this->galleryUrl = $galleryUrl;

        return $this;
    }

    /**
     * Get galleryUrl
     *
     * @return string
     */
    public function getGalleryUrl()
    {
        return $this->galleryUrl;
    }

    /**
     * Set pageEn
     *
     * @param string $pageEn
     *
     * @return Directory
     */
    public function setPageEn($pageEn)
    {
        $this->pageEn = $pageEn;

        return $this;
    }

    /**
     * Get pageEn
     *
     * @return string
     */
    public function getPageEn()
    {
        return $this->pageEn;
    }

    /**
     * Set pageTa
     *
     * @param string $pageTa
     *
     * @return Directory
     */
    public function setPageTa($pageTa)
    {
        $this->pageTa = $pageTa;

        return $this;
    }

    /**
     * Get pageTa
     *
     * @return string
     */
    public function getPageTa()
    {
        return $this->pageTa;
    }

    /**
     * Set isPageActive
     *
     * @param boolean $isPageActive
     *
     * @return Directory
     */
    public function setIsPageActive($isPageActive)
    {
        $this->isPageActive = $isPageActive;

        return $this;
    }

    /**
     * Get isPageActive
     *
     * @return boolean
     */
    public function getIsPageActive()
    {
        return $this->isPageActive;
    }

    /**
     * Set viewCount
     *
     * @param integer $viewCount
     *
     * @return Directory
     */
    public function setViewCount($viewCount)
    {
        $this->viewCount = $viewCount;

        return $this;
    }

    /**
     * Get viewCount
     *
     * @return integer
     */
    public function getViewCount()
    {
        return $this->viewCount;
    }
}
